name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      run: npm install -g pnpm
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Type check
      run: pnpm run type-check
    
    - name: Lint
      run: pnpm run lint
    
    - name: Build
      run: pnpm run build
    
    - name: Install dfx for canister integration
      run: |
        sh -ci "$(curl -fsSL https://internetcomputer.org/install.sh)"
        echo "$HOME/bin" >> $GITHUB_PATH
    
    - name: Build for IC deployment
      run: |
        dfx start --background --clean
        dfx deploy --network local
        dfx stop
    
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: .lighthouserc.json
        uploadArtifacts: true
        temporaryPublicStorage: true
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ohms-ui-build
        path: |
          dist/
          .dfx/local/canisters/ohms_ui/
        retention-days: 30

  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      run: npm install -g pnpm
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Run tests
      run: pnpm test
    
    - name: Run e2e tests
      run: pnpm run test:e2e

  accessibility:
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      run: npm install -g pnpm
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Build
      run: pnpm run build
    
    - name: Run accessibility tests
      run: |
        npx @axe-core/cli dist/ --exit
    
  performance:
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      run: npm install -g pnpm
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Build
      run: pnpm run build
    
    - name: Bundle analysis
      run: |
        npx webpack-bundle-analyzer dist/stats.json --report --mode static --no-open
        echo "Bundle analysis completed"